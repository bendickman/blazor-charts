@inject IJSRuntime JsRuntime

<canvas id="@Id"></canvas>

@code {

    public enum ChartType
    {
        Pie = 1,
        Bar = 2,
    };

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public ChartType Type { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public int[] Data { get; set; }

    [Parameter]
    public string[] BackgroundColor { get; set; }

    [Parameter]
    public string[] Labels { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var config = GetChartConfig();

        await JsRuntime.InvokeVoidAsync("setup", Id, config);
    }

    private object GetChartConfig() => Type switch
    {
        ChartType.Bar => ChartConfig.GetBarChartConfig(Data, BackgroundColor, Labels, Title),
        ChartType.Pie => ChartConfig.GetPieChartConfig(Data, BackgroundColor, Labels, Title),
        _ => throw new ArgumentException($"Unable to find config for chart type: '{Type}'"),
    };
}